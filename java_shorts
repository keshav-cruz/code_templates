2D ArrayList to 2D array:
            List<int[]> ans = new ArrayList<>();

          int[][] final = ans.toArray(new int[ans.size()][])

1D ArrayList to 1D array:
           List<Integer> myList = new ArrayList<>();

          int[] ans = myList.stream().mapToInt(Integer:: intValue).toArray();
          int[] arr = myList.stream().mapToInt(i->i).toArray();
          Integer[] arr = myList.toArray(new Integer[list.size()]);

int[] to ArrayList<Integer>               # You can't add more elements to the ArrayList 
         int[] a = new int[]{1,23,4,6};

       List<Integer> list = Arrays.stream(a).boxed().collect(Collectors.toList());

Integer[] to ArrayList<Integer> :          # You can't add more elements to the ArrayList 
            Integer[] a = new Integer[]{1,23,4}

          List<Integer> list = Arrays.asList(a);


int[] dir = {{-1, -1},  {-1, 0},  {-1, 1},  {0, -1},  {0, 0},  {0, 1},  {1, -1},  {1, 0},  {1, 1}}; // 8d
int[] dir = {{0,1}, {1,0}, {0,-1}, {-1,0}};   // 4d
int[] dir = {{-1,-1}, {1,1}, {1-,1}, {1,-1}};   // diagonal dirs
